// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// extract_mcc
std::vector < std::string > extract_mcc(std::vector < std::string > x_analytics);
RcppExport SEXP WMUtils_extract_mcc(SEXP x_analyticsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::vector < std::string > >::type x_analytics(x_analyticsSEXP );
        std::vector < std::string > __result = extract_mcc(x_analytics);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// c_sampled_logs
DataFrame c_sampled_logs(const char* filename);
RcppExport SEXP WMUtils_c_sampled_logs(SEXP filenameSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< const char* >::type filename(filenameSEXP );
        DataFrame __result = c_sampled_logs(filename);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// c_ua_parse
DataFrame c_ua_parse(std::vector < std::string > agents, std::string yaml_file_loc);
RcppExport SEXP WMUtils_c_ua_parse(SEXP agentsSEXP, SEXP yaml_file_locSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::vector < std::string > >::type agents(agentsSEXP );
        Rcpp::traits::input_parameter< std::string >::type yaml_file_loc(yaml_file_locSEXP );
        DataFrame __result = c_ua_parse(agents, yaml_file_loc);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// host_handler
std::vector< std::string > host_handler(std::vector < std::string > urls);
RcppExport SEXP WMUtils_host_handler(SEXP urlsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::vector < std::string > >::type urls(urlsSEXP );
        std::vector< std::string > __result = host_handler(urls);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// c_project_extractor
std::vector < std::string > c_project_extractor(std::vector < std::string > urls);
RcppExport SEXP WMUtils_c_project_extractor(SEXP urlsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::vector < std::string > >::type urls(urlsSEXP );
        std::vector < std::string > __result = c_project_extractor(urls);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
